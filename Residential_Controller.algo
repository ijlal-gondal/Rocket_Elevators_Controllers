// This Sequence will control the movement of Elevators in a residential building with 2 Elevators and 10 floors.

Objects to be controlled:
 Column is the pack of elevator, which is only 1 in our residential case.
 Cage is being reffered to as Elevator in my algorithim
 Call button,  which I have named as OutsideButton
 Doors, which are being controlled by OpEND SEQUENCEoor and CloseDoor function
 Floor request button, which I have named as InsideButton

Input, Outputs and Variables: 

InsideButton, Ousidebutton, TotalFloor, idle

MoveUp, MoveDown, OpEND SEQUENCEoor, CloseDoor 


Sequence CallingElevator USING Direction and Floor
    When outside Button pressed
    Input Current Floor and required Direction (UP or DOWN)
    Call Sequence FindElevator
END SEQUENCE 

Sequence RequestingFloor
    When inside button pressed
    Input TargetFloor into TargetList
    Call Sequence FindDirection
    
        Call Sequence MoveElevator

END SEQUENCE



Sequence MoveElevator
    If target Direction is UP 
    Call Sequence Elevator MoveUp
    Else target Direction is DOWN
    Call Sequence Elevator MoveDown
END SEQUENCE

Sequence ElevatorMoveUp
    If OpenDoor is True
        Call Sequence CloseDoor
    Else CloseDoor is True
        while Current Floor < Target Floor
        Increment Current Floor by 1
        END SEQUENCEWHILE
    Call Sequence OpEND SEQUENCEoor
END SEQUENCE

Sequence ElevatorMoveDown
    If OpenDoor is True
        Call Sequence CloseDoor
    Else CloseDoor is True
        while Current Floor > Target Floor
        Decrement Current Floor by 1
        END SEQUENCEWHILE
    Call Sequence OpEND SEQUENCEoor

END SEQUENCE

Sequence FindDirection
    If Current Floor - Target Floor is < 0
    set Direction UP
    Else If Current Floor - Target Floor is > 0
    set Direction DOWN
    ELse If Current Floor - Target Floor = 0
    DO Nothing
END SEQUENCE


Sequence OpEND SEQUENCEoor 
    WHILE CloseDoor is True
    WHEN Current Floor = Target Floor
    END SEQUENCEWHILE
    Open Door
END SEQUENCE

Sequence CloseDoor
    WHILE OpEND SEQUENCEoor is True
    wait for 15 seconds
    END SEQUENCEWHILE
    Close Door
END SEQUENCE






Sequence FindElevator USING Cuurent Direction and Current Floor
    Look for elevator in Elevatorlist
            if Current Direction equals Elevator Direction and Current Floor equals Elevator Floor and elevator is Stopped
            return elevator
            else if Current Direction equals Elevator Direction and Current Floor equals Elevator Floor and elevator is Idle
            return elevator
            else if Current Direction equals Elevator Direction and Current Floor > Elevator Floor and elevator is Moving or Stopped
                Call Sequence findClosestElevator, then return ClosestElevator
            return elevator
            else if Current Direction equals Elevator Direction and Current Floor < Elevator Floor and elevator is Moving or Stopped
              Call Sequence findClosestElevator, then return ClosestElevator
            return elevator
            else if elevator status equals idle
                Call Sequence findClosestElevator, then return ClosestElevator
            return elevator

            
END SEQUENCE





Sequence findClosestElevator
    Look for elevator in Elevatorlist
        Compute the difference between Current Floor and Elevator Floor, then set it as closeness
        Compare that to difference of next elevator in Elevatorlist
        if difference of next elevator < closeness
        set differenceof next elevator to be closeness
        return ClosestElevator with the closeness
END SEQUENCE







function requestElevator(floor,direction) 
function elevatorRequest(elevator,floor)